generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id        Int       @id @default(autoincrement())
  content   String
  createdAt DateTime  @default(now())
  owner     User      @relation(fields: [userId], references: [id])
  userId    Int
  chat      Chat      @relation(fields: [chatId], references: [id])
  chatId    Int
}

model Chat {
  id        Int       @id @default(autoincrement())
  name      String
  messages  Message[]
  participants User[]
}

model User {
  id        Int       @id @default(autoincrement())
  fname     String
  lname     String
  email     String    @unique
  passw     String
  region    Region    @relation(fields: [regionId], references: [id])
  regionId  Int
  active    Boolean   @default(true)
  news      News[]
  messages  Message[]
  chats     Chat[]
}

model News {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  region    Region    @relation(fields: [regionId], references: [id])
  regionId  Int
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  titleReliability Json?
  contentReliability Json?
  averagePlausability Float
  referencedUsers Json?
}

model Region {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  users     User[]
  news      News[]
}

// THIS IP LOG SYSTEM HAS BEEN DEPRECIATED IN FAVOR OF EXTERNAL RATE LIMITNG FOR SECURITY
model IpLog {
  id          Int      @id @default(autoincrement())
  ip          String   @unique
  requestCount Int     @default(0)
  lastUsed    DateTime @default(now())
  banned      Boolean  @default(false)
  banReason   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}