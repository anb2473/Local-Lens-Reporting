<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>Local Lens</title>
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <header class="header">
        <h1 class="logo">Local Lens</h1>
        <nav class="nav-links">
            <a href="/">Home</a>
            <a href="our-solution">Our Solution</a>
            <a href="about">About Me</a>
        </nav>
        <button class="menu-btn" aria-label="Open navigation">
            <span class="bar bar1"></span>
            <span class="bar bar2"></span>
            <span class="bar bar3"></span>
        </button>
    </header>

    <main style="display: flex; justify-content: center;">
        <form id="sign-up-form">
            <h3 id="err" style="color: #ff8177;"></h3>
            <br>
            <div class="form-group">
                <label for="fname">First Name:</label>
                <input type="text" id="fname" name="fname" required autocomplete="given-name">
            </div>
            <div class="form-group">
                <label for="lname">Last Name:</label>
                <input type="text" id="lname" name="lname" required autocomplete="family-name">
            </div>
            <div class="form-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required autocomplete="username">
            </div>
            <div class="form-group">
                <label for="loc">Region:</label>
                <div class="autocomplete-container">
                    <input type="text" id="loc" name="loc" placeholder="Search your region" autocomplete="off">
                    <div class="autocomplete-results"  id="autocompleteResults">
                        <% regions.forEach(region => { %>
                            <div class="autocomplete-item" data-region="<%= region.name %>" style="display: none;">
                                <%= region.name %>
                            </div>
                        <% }); %>

                        <script>
                            const searchInput = document.getElementById('loc');
                            const autocompleteItems = document.querySelectorAll('.autocomplete-item');

                            function checkAutocompleteItems() {
                                autocompleteItems.forEach(item => {
                                    if (item.textContent.toLowerCase().includes(searchInput.value.toLowerCase())) {
                                        item.style.display = 'block';
                                    } else {
                                        item.style.display = 'none';
                                    }
                                });
                            }

                            searchInput.addEventListener('input', checkAutocompleteItems);
                        </script>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="passw">Password:</label>
                <input type="password" id="passw" name="passw" required autocomplete="current-password">
            </div>
            <button type="submit" class="submit-btn">Sign Up</button>
            
            <br>
            <br>

            <a href="login" class="a">If you already have an account, click here to log in</a>
        </form>
    </main>

    <script>
        async function handleSignUp(e) {
            e.preventDefault();
            const fname = document.getElementById('fname').value;
            const lname = document.getElementById('lname').value;
            const email = document.getElementById('email').value;
            const loc = document.getElementById('loc').value;
            const passw = document.getElementById('passw').value;

            const err = document.getElementById('err');
            try {
                const res = await fetch('/auth/sign-up', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({ fname, lname, email, loc, passw })
                });

                if (res.ok) {
                    window.location.href = '/user/search';
                } else {
                    const errorData = await res.json();
                    err.textContent = errorData.err || 'Sign up failed';
                }
            } catch (error) {
                err.textContent = 'An error occurred';
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            const menuBtn = document.querySelector('.header .menu-btn');
            const navLinks = document.querySelector('.header .nav-links');
            if (menuBtn && navLinks) {
                menuBtn.addEventListener('click', function() {
                    menuBtn.classList.toggle('open');
                    navLinks.classList.toggle('open');
                });
            }

            const searchInput = document.getElementById('loc');
            const resultsContainer = document.getElementById('autocompleteResults');
            const autocompleteItems = document.querySelectorAll('.autocomplete-item');

            if (searchInput && resultsContainer) {
                searchInput.addEventListener('input', function() {
                    const searchTerm = this.value.toLowerCase();

                    // Show results container if there's input
                    resultsContainer.classList.toggle('open', searchTerm.length > 0);

                    // Filter and show/hide items
                    autocompleteItems.forEach(item => {
                        const region = item.getAttribute('data-region');
                        const isVisible = region.toLowerCase().includes(searchTerm);
                        item.style.display = isVisible ? 'block' : 'none';

                        if (isVisible && searchTerm === region.toLowerCase()) {
                            item.classList.add('selected');
                        } else {
                            item.classList.remove('selected');
                        }
                    });
                });

                // Handle clicking on a region
                resultsContainer.addEventListener('click', function(e) {
                    const item = e.target.closest('.autocomplete-item');
                    if (item) {
                        searchInput.value = item.getAttribute('data-region');
                        // Submit the form
                        searchInput.closest('form').submit();
                    }
                });

                // Close when clicking outside
                document.addEventListener('click', function(e) {
                    if (!searchInput.contains(e.target) && !resultsContainer.contains(e.target)) {
                        resultsContainer.classList.remove('open');
                    }
                });
            }

            document.body.classList.add('loaded');

            const signUpForm = document.getElementById('sign-up-form');
            if (signUpForm) {
                signUpForm.addEventListener('submit', handleSignUp);
            }
        });
    </script>
</body>
</html>
